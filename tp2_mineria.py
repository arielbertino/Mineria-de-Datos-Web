# -*- coding: utf-8 -*-
"""TP2_Mineria.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RLvjQge4acARhZGC_7vxky4lg4aKxAn0

**TP2 MINERIA DE DATOS WEB**

Tomar 10 noticias de un diario (o blog) en inglés y 10 noticias de un diario (o blog) en español. Identificar las entidades nombradas con SpaCy de cada uno de los 20 documentos e identificar, de acuerdo a la tabla de entidades vista en la clase:

1) entidades reconocidas correctamente

2) entidades reconocidas incorrectamente

3) entidades no reconocidas

Entregar un notebook con el código utilizado para la tarea, y el análisis realizado


---
"""

# Commented out IPython magic to ensure Python compatibility.
# INICIO TP2 MINERIA WEB

# IMPORTACION DE LIBRERIAS
!pip install contractions
!pip install inflect

import numpy
import requests
import contractions
import nltk
import unicodedata
import re
import inflect
import matplotlib.pyplot as plt
import spacy
import en_core_web_sm

nltk.download('genesis')
nltk.download('inaugural')
nltk.download('nps_chat')
nltk.download('webtext')
nltk.download('treebank')
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('tagset')
nltk.download('averaged_perceptron_tagger')

#nltk.download('book')
#from nltk.book import * descarga libro para probar y operar

from bs4 import BeautifulSoup
from nltk import sent_tokenize
from nltk import word_tokenize
from nltk.corpus import stopwords
from nltk import FreqDist
from nltk.tokenize import word_tokenize
from nltk.tag import pos_tag
from nltk.chunk import ne_chunk
from spacy import displacy
from pprint import pprint
from collections import Counter

# %matplotlib inline
spacy.cli.download("es_core_news_sm")

# algunas declaraciones
CANTNOTICIAS = 5
nlpIngles = en_core_web_sm.load() 
nlpEsp = spacy.load("es_core_news_sm")

## OBTENGO LOS HTML DE DIARIOS ONLINE

### DIARIOS INGLESES - NOTICIAS DEL 2018 ###
thesun0 = "https://www.thesun.co.uk/news/2972047/pets-at-home-is-taking-dry-cat-food-off-the-shelves-after-animals-started-fitting-and-became-seriously-unwell/"
thesun1 = "https://www.thesun.co.uk/sport/football/2985266/fifa-reveal-confederations-cup-ticket-prices-for-2017-tournament-and-obese-fans-can-even-buy-their-own-special-seats/"
thesun2 = "https://www.thesun.co.uk/news/2984712/pets-at-home-ava-cat-food-recalled-thiamine-how-many-cats-died/"
thesun3 = "https://www.thesun.co.uk/sport/football/3001481/alexis-sanchez-arsenal-juventus/"
thesun4 = "https://www.thesun.co.uk/living/3002364/holidaymakers-who-booked-luxury-trips-to-disney-hotel-in-florida-told-building-work-will-disrupt-resort-for-13-months/"

dailymail0 = "https://www.dailymail.co.uk/news/article-5226797/11-000-homes-England-stood-ten-years.html"
dailymail1 = "https://www.dailymail.co.uk/news/article-5227083/Outrage-Woolworths-Coles-selling-hot-cross-buns.html"
dailymail2 = "https://www.dailymail.co.uk/news/article-5227269/SEBASTIAN-SHAKESPEARE-Sam-Chatto-told-smarten-up.html"
dailymail3 = "https://www.dailymail.co.uk/news/article-5227497/Cities-United-States-lit-supermoon.html"
dailymail4 = "https://www.dailymail.co.uk/news/article-5227401/Jupiters-strongest-50-years-New-Year.html"
### ------------------------------------- ###

### DIARIOS ARGENTIN0S - NOTICIAS DEL 2020 ###
laprensa0 = "http://www.laprensa.com.ar/489869-Dickens-escritor-del-pueblo.note.aspx"
laprensa1 = "http://www.laprensa.com.ar/489868-Que-es-poesia.note.aspx"
laprensa2 = "http://www.laprensa.com.ar/489964-Asesinan-de-un-balazo-a-un-remisero-en-un-intento-de-robo-en-Moron.note.aspx"
laprensa3 = "http://www.laprensa.com.ar/489956-Dolares-o-ladrillos.note.aspx"
laprensa4 = "http://www.laprensa.com.ar/489159-Pasatiempo-historico-y-policial.note.aspx"

cronica0 = "https://www.cronica.com.ar/mundo/Resuelven-en-una-semana-un-problema-matematico-que-llevaba-medio-siglo-sin-respuesta-20200613-0089.html"
cronica1 = "https://www.cronica.com.ar/mundo/Los-jovenes-cada-vez-tienen-menos-sexo-y-parece-que-no-es-por-el-coronavirus-20200613-0015.html"
cronica2 = "https://www.cronica.com.ar/mundo/Iran-ejecutara-a-espia-de-la-CIA-20200609-0088.html"
cronica3 = "https://www.cronica.com.ar/mundo/Fuerte-sismo-de-magnitud-44-sacudio-Venezuela-20200611-0018.html"
cronica4 = "https://www.cronica.com.ar/mundo/Que-es-Detectan-una-fuente-desconocida-que-emite-senales-a-la-Tierra-cada-157-dias-20200612-0008.html"
### -------------------------------------- ###

cabecera = requests.utils.default_headers()
cabecera.update({ 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0'})

# funcion para obtener el codigo html de una pagina web
def obtenerHtml(dir):
  direccion = dir
  peticion = requests.get(direccion, cabecera)
  codigo = BeautifulSoup(peticion.content, 'html.parser')
  return codigo

# paso las direcciones a listas para manejarlas mas comodamente
listaTS = [thesun0, thesun1, thesun2, thesun3, thesun4]
listaDM = [dailymail0, dailymail1, dailymail2, dailymail3, dailymail4]
listaLP = [laprensa0, laprensa1, laprensa2, laprensa3, laprensa4]
listaCR = [cronica0, cronica1, cronica2, cronica3, cronica4]

# listas de htmls
TSHtml = []
DMhtml = []
LPHtml = []
CRHtml = []

#funcion para que deja los html propiamente dichos en otras listas
def extraerHtml(dirs, resul):
  for i in range(CANTNOTICIAS):
    resul.append(obtenerHtml(dirs[i]))

extraerHtml(listaTS, TSHtml)
extraerHtml(listaDM, DMhtml)
extraerHtml(listaLP, LPHtml)
extraerHtml(listaCR, CRHtml)

# procesamiento para el diario The Sun

def analizarNER_TS(listaTS):
  for q in range(CANTNOTICIAS):
    enti=0
    print("Analisis de la noticia nro ",q,": ")
    print()
    t = listaTS[q].find("article") 
    t2 = t.get_text()
    doc=nlpIngles(t2)
    displacy.render(doc, jupyter=True, style="ent")
    for d in doc.ents:
      enti+=1
    print()
    print("Se encontraron:",enti,"entidades.")
    print()
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print()

analizarNER_TS(TSHtml)

"""Analisis de las noticias del diario britanico The Sun:

---
Noticia 0 : 91 entidades encontradas

Tematica: Animales

1) entidades reconocidas correctamente: 58/91 = 63.73 %

2) entidades reconocidas incorrectamente: 33/91 = 36.27 %

3) entidades no reconocidas: 12 aprox

---
Noticia 1 :  74 entidades encontradas

Tematica: Deportes

1) entidades reconocidas correctamente: 40/74 = 55.55 %

2) entidades reconocidas incorrectamente: 34/74 = 44.45 %

3) entidades no reconocidas: 22 aprox

---
Noticia 2 :  80 entidades encontradas

Tematica: Animales

1) entidades reconocidas correctamente: 67/80 = 83.75 %

2) entidades reconocidas incorrectamente: 13/80 = 16.25 %

3) entidades no reconocidas: 13 aprox

---
Noticia 3 : 65 entidades encontradas

Tematica: Deportes

1) entidades reconocidas correctamente: 46/65 = 70.76 %

2) entidades reconocidas incorrectamente: 19/65 = 29.24 %

3) entidades no reconocidas: 23

---
Noticia 4 : 106 entidades encontradas

Tematica: Espectaculos

1) entidades reconocidas correctamente: 73/106 = 71.69 %

2) entidades reconocidas incorrectamente: 33/106 = 28.31 %

3) entidades no reconocidas: 26 aprox

---
"""

#procesamiento para el diario Daily Mail

def analizarNER_DM(listaDM):
  for co in range(CANTNOTICIAS):
    enti=0
    print("Analisis de la noticia nro ",co,": ")
    print()
    contenido=""
    t = listaDM[co].find("h2")
    contenido = contenido + t.get_text()
    for n in listaDM[co].find_all("div", itemprop="articleBody"):
      m = n
      for i in m.find_all("p"):
        contenido += '\n'+ i.get_text() 
    doc2=nlpIngles(contenido)
    displacy.render(doc2, jupyter=True, style="ent")
    for d in doc2.ents:
      enti+=1
    print()
    print("Se encontraron:",enti,"entidades.")
    print()
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print()

analizarNER_DM(DMhtml)

"""Analisis de las noticias del diario britanico Daily Mail:

---
Noticia 0 : 43 entidades encontradas

Tematica: Socio-economico

1) entidades reconocidas correctamente: 32/43 = 74.41 %

2) entidades reconocidas incorrectamente: 11/43 = 25.59 %

3) entidades no reconocidas: 4 aprox

---
Noticia 1 : 90 entidades encontradas

Tematica: Socio-economico

1) entidades reconocidas correctamente: 71/90 = 78.88 %

2) entidades reconocidas incorrectamente: 19/90 = 21.12 %

3) entidades no reconocidas: 8 aprox

---
Noticia 2 :  45 entidades encontradas

Tematica: Cultura-literatura-cine

1) entidades reconocidas correctamente: 41/45 =  91.11 %

2) entidades reconocidas incorrectamente: 4/45 = 9.89 %

3) entidades no reconocidas: 8 aprox

---
Noticia 3 : 205 entidades encontradas

Tematica: Socio-cultural, economico

1) entidades reconocidas correctamente: 159/205 = 77.56 %

2) entidades reconocidas incorrectamente: 46/205 = 22.44 %

3) entidades no reconocidas: 10 aprox

---
Noticia 4 : 118 entidades encontradas

Tematica: Economico-cultural

1) entidades reconocidas correctamente: 109/118 =  92.38 %

2) entidades reconocidas incorrectamente: 9/118 = 7.62 %

3) entidades no reconocidas: 4 aprox

---
"""

#procesamiento para el diario La Prensa

def analizarNER_LP(listaLP):
  for co in range(CANTNOTICIAS):
    enti=0
    contenido2=""
    for art in listaLP[co].find_all("div", class_="entry__article"):
      for a in art.find_all("p"):
        contenido2 = contenido2 + a.get_text()
    #print(art.get_text)
    #contenido2
    print("Analisis de la noticia nro ",co,": ")
    print()
    doc3=nlpEsp(contenido2)
    displacy.render(doc3, jupyter=True, style="ent")
    for d in doc3.ents:
      enti+=1
    print()
    print("Se encontraron:",enti,"entidades.")
    print()
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print()

analizarNER_LP(LPHtml)

"""Aclaracion: Para el idioma español las herramienta solo reconoce 4 tipos de entidades nombradas. Estas son: PERSONAS, LOCACIONES, ORGANIZACION y MISCELANEOS

Analisis de las noticias del diario Argentino La Prensa:

---
Noticia 0 : 91 entidades encontradas

Tematica: Cultura

1) entidades reconocidas correctamente: 49/91 = 53.84 %

2) entidades reconocidas incorrectamente: 42/91 = 46.16 %

3) entidades no reconocidas: 3 aprox

---
Noticia 1 :  74 entidades encontradas

Tematica: Cultura

1) entidades reconocidas correctamente: 26/74 = 35.13 %

2) entidades reconocidas incorrectamente: 48/74 = 64.87 %

3) entidades no reconocidas: no encontré

---
Noticia 2 :  72 entidades encontradas

Tematica: actualidad

1) entidades reconocidas correctamente: 37/72 = 51.39 %

2) entidades reconocidas incorrectamente: 35/72 = 48.61 %

3) entidades no reconocidas: 5 aprox

---
Noticia 3 : 29 entidades encontradas

Tematica: Economia

1) entidades reconocidas correctamente: 11/29 = 37.93 %

2) entidades reconocidas incorrectamente: 18/29 = 62.07 %

3) entidades no reconocidas: 3 aprox

---
Noticia 4 : 49 entidades encontradas

Tematica: Libros

1) entidades reconocidas correctamente: 21/49 = 42.85 %

2) entidades reconocidas incorrectamente: 28/45 = 57.15%

3) entidades no reconocidas: 8 aprox

---
"""

#procesamiento para el diario Cronica
#div class="entry-body text-font"

def analizarNER_CR(listaCR):
  for co in range(CANTNOTICIAS):
    enti=0
    contenido3=""
    for art in CRHtml[co].find_all("div", class_="entry-body text-font"):
      for a in art.find_all("p"):
        contenido3 = contenido3 + a.get_text()
    print("Analisis de la noticia nro ",co,": ")
    print()    
    doc4=nlpEsp(contenido3)
    displacy.render(doc4, jupyter=True, style="ent")
    for d in doc4.ents:
      enti+=1
    print()
    print("Se encontraron:",enti,"entidades.")
    print()
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------------------------------------------------------------------")
    print()
    
analizarNER_CR(CRHtml)

"""Analisis de las noticias del diario argentina Cronica:

---
Noticia 0 : 28 entidades encontradas

Tematica: Ciencia

1) entidades reconocidas correctamente: 17/28 = 60.72 %

2) entidades reconocidas incorrectamente: 11/28 = 39.28 %

3) entidades no reconocidas: 4 aprox

---
Noticia 1 :  14 entidades encontradas

Tematica: Socio-cultural

1) entidades reconocidas correctamente: 4/14 = 28.57 %

2) entidades reconocidas incorrectamente: 10/14 = 71.43 %

3) entidades no reconocidas: 3 aprox

---
Noticia 2 :  19 entidades encontradas

Tematica: Politica

1) entidades reconocidas correctamente: 11/19 = 57.89 %

2) entidades reconocidas incorrectamente: 8/19 = 42.11 %

3) entidades no reconocidas: 2 aprox

---
Noticia 3 : 22 entidades encontradas

Tematica: Internacional

1) entidades reconocidas correctamente: 16/22 = 72.72 %

2) entidades reconocidas incorrectamente: 6/22 = 27.28 %

3) entidades no reconocidas: 2 aprox

---
Noticia 4 : 18 entidades encontradas

Tematica: Ciencia, espacio exterio, cosmos

1) entidades reconocidas correctamente: 0/18 = 0 %

2) entidades reconocidas incorrectamente: 18/18 = 100 %

3) entidades no reconocidas: 3 aprox

---

Conclusiones finales:

Noticias en ingles: 

Dado que la libreria provee un mayor numero de entidad que puede reconcer el uso de NER con idioma en ingles detectera mas entidades. A pesar de todo esto, no hay un tematica en particular en la cual el contenedor de los elementos de lenguaje usado ("es_core_news_sm") sea mas preciso. 

Se podria decir que a grandes rasgos el reconocimiento de entidades es bueno pero, como se puede observar en las noticias del diario The Sun, el reconocimiento decae mucho en precision cuando no se extrae el texto de una manera "muy limpia". 

Por otro lado a la hora de analizar las noticias del diario Daily Mail se puede ver que el reconocimiento de entidades correctamente identificadas el aproximadamente del 75% o superior

En ambos grupos de noticias La cantidad de entidades no reconocidas, si bien no llega a ser despreciable, es bajo para la cantidad total de entidades reconocidas en cada noticia.

Noticias en español:

Al aplicar NER con el NLP para español ("es_core_news_sm"), desde un inicio solo reconoce 4 tipode de entidades, dando lugar a posibles errores. En general la tasa de errores es muy alta (45 % o superior). Esto es debido que a la hora de analizar la gran mayoria de entidades son reconocidas como miscelaneas, donde basados en las noticias analizadas, muy pocas entidades "miscelaneas" en realidad pertenecen a dicha categoria con lo cual termina en un analisis muy incierto. Tambien se puede relacionar el infimo numero de entidades no reconocidas al hecho de que solo se puede detectar 4 entidades distintas.


Para finalizar cabe aclarar que el analisis de la correctitud de la pertenencia correcta o incorrecta a un determinada entidad se realizó manualmente contado una por una y revisando entidad por entidad, lo cual posiblemente adicionó o hizo no contemplar algunos errores.
"""